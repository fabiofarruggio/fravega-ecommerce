name: CI & Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GOREST_TOKEN: ${{ secrets.GOREST_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build \
            -t fravega-ecommerce:${{ github.sha }} \
            .

      - name: Run tests in container
        run: |
          docker run --rm \
            -e GOREST_TOKEN \
            -v ${{ github.workspace }}/target:/usr/src/app/target \
            fravega-ecommerce:${{ github.sha }}

      - name: Generate Allure report (single file)
        run: |
          docker run --rm \
            --entrypoint sh \
            -v ${{ github.workspace }}/target:/usr/src/app/target \
            fravega-ecommerce:${{ github.sha }} \
            -c "allure generate target/allure-results --clean -o target/allure-report --single-file"

      - name: Upload Allure results (raw)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

      - name: Upload Allure report (index.html only)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report/index.html

  pages:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download single-file Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: report

      - name: Prepare Pages content
        run: |
          mkdir -p .publish
          mv report/index.html .publish/index.html

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .publish

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
